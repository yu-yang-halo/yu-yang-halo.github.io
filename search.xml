<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[SOAP调用webservice]]></title>
      <url>www.baidu.com/2016/09/06/soap-webservice/</url>
      <content type="html"><![CDATA[<h2 id="如果提供一个远程的web服务，本地一般的几种调用方式"><a href="#如果提供一个远程的web服务，本地一般的几种调用方式" class="headerlink" title="如果提供一个远程的web服务，本地一般的几种调用方式"></a>如果提供一个远程的web服务，本地一般的几种调用方式</h2><ul>
<li>HTTP的方式</li>
<li>Axis2(生成客户端方式 ,RPC,DOM)</li>
<li>SOAP </li>
</ul>
<p> 一般的webservice请求这三种方式都可以实现,但是如果服务端采用了某些限制，例如禁用了http访问,以及采用cookie保持会话的这种奇葩方式，建议你使用<a href="http://www.java2s.com/Code/JarDownload/ksoap2/ksoap2-android-assembly-2.5.7-jar-with-dependencies.jar.zip" title="Title" target="_blank" rel="external">ksoap2-android-assembly-2.5.7-jar-with-dependencies.jar</a> 这个包来实现与服务端的通信</p>
<p>参考：<a href="http://blog.csdn.net/lovekwf/article/details/44205101" target="_blank" rel="external">http://blog.csdn.net/lovekwf/article/details/44205101</a></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">private</span> Object <span class="title">coreCallResponse</span><span class="params">(String methodName, List&lt;Object[]&gt; params)</span> </span>&#123;</div><div class="line"></div><div class="line">   	String result = <span class="keyword">null</span>;<span class="comment">// 方法的返回值</span></div><div class="line">	String SOAP_ACTION = NS_URL + methodName;</div><div class="line">	SoapObject requestObject = <span class="keyword">new</span> SoapObject(NS_URL, methodName);</div><div class="line">	<span class="keyword">if</span> (params != <span class="keyword">null</span>) &#123;</div><div class="line">           <span class="comment">//数组类型的参数采用PropertyInfo来序列化，否则会出现无法序列化的异常</span></div><div class="line">		<span class="keyword">if</span> (methodName.equals(<span class="string">"wsQueryYktByUserCodeArray"</span>)) &#123;</div><div class="line">			<span class="keyword">for</span> (Object[] oArr : params) &#123;</div><div class="line">				<span class="keyword">for</span> (Object o : oArr) &#123;</div><div class="line">					PropertyInfo p = <span class="keyword">new</span> PropertyInfo();</div><div class="line">					p.setName(<span class="string">"string"</span>);</div><div class="line">					p.setValue(o);</div><div class="line">					requestObject.addProperty(p);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line"></div><div class="line">		&#125; <span class="keyword">else</span> &#123;</div><div class="line">			<span class="keyword">for</span> (Object[] kv : params) &#123;</div><div class="line">				requestObject.addProperty(kv[<span class="number">0</span>].toString(), kv[<span class="number">1</span>]);</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	SoapSerializationEnvelope envelope = <span class="keyword">new</span> SoapSerializationEnvelope(</div><div class="line">			SoapEnvelope.VER11);</div><div class="line">	envelope.dotNet = <span class="keyword">false</span>; </div><div class="line">	envelope.bodyOut = requestObject;</div><div class="line">	HttpTransportSE hts = <span class="keyword">new</span> HttpTransportSE(SOAP_URL);</div><div class="line">	Object o = <span class="keyword">null</span>;</div><div class="line">	<span class="keyword">try</span> &#123;</div><div class="line">		LinkedList&lt;HeaderProperty&gt; reqHeaders = <span class="keyword">new</span> LinkedList&lt;HeaderProperty&gt;();</div><div class="line">		<span class="comment">// 若已经带有cookie,则每次访问WebService时,要带有这个cookie。</span></div><div class="line">		<span class="keyword">if</span> (mSessionHeader != <span class="keyword">null</span>) &#123;</div><div class="line">			reqHeaders.add(<span class="keyword">new</span> HeaderProperty(<span class="string">"Cookie"</span>, mSessionHeader</div><div class="line">					.getValue()));</div><div class="line"></div><div class="line">		&#125;</div><div class="line">           <span class="comment">// 访问WebService</span></div><div class="line">		<span class="meta">@SuppressWarnings</span>(<span class="string">"rawtypes"</span>)</div><div class="line">		List headerList = hts.call(SOAP_ACTION, envelope, reqHeaders);</div><div class="line">		<span class="keyword">if</span> (headerList != <span class="keyword">null</span>) &#123;</div><div class="line">			<span class="keyword">for</span> (Object headerElement : headerList) &#123;</div><div class="line">				HeaderProperty headerProperty = (HeaderProperty) headerElement;</div><div class="line">				String headerKey = headerProperty.getKey();</div><div class="line">				String headerValue = headerProperty.getValue();</div><div class="line">				<span class="keyword">if</span> (headerKey != <span class="keyword">null</span></div><div class="line">						&amp;&amp; headerKey.equalsIgnoreCase(<span class="string">"set-cookie"</span>)) &#123;</div><div class="line">					<span class="comment">// 服务端发送过来的set-cookie项</span></div><div class="line">					mSessionHeader = headerProperty;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line"></div><div class="line">		&#125;</div><div class="line"></div><div class="line">		o = envelope.getResponse();</div><div class="line">		result = o.toString();</div><div class="line">	&#125; <span class="keyword">catch</span> (SoapFault e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	&#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	&#125; <span class="keyword">catch</span> (XmlPullParserException e) &#123;</div><div class="line">		e.printStackTrace();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Bitmap在Intent中传递的问题]]></title>
      <url>www.baidu.com/2016/08/29/andorid-s-1/</url>
      <content type="html"><![CDATA[<h5 id="JavaBinder-FAILED-BINDER-TRANSACTION-Bitmap太大无法在Intent中传递"><a href="#JavaBinder-FAILED-BINDER-TRANSACTION-Bitmap太大无法在Intent中传递" class="headerlink" title="JavaBinder: !!! FAILED BINDER TRANSACTION !!! Bitmap太大无法在Intent中传递"></a>JavaBinder: !!! FAILED BINDER TRANSACTION !!! Bitmap太大无法在Intent中传递</h5><p>一般的解决办法是对Bitmap进行缩放<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 对于网络下载转化的bitmap只能使用Bitmap自带的转化方法</span></div><div class="line">Bitmap.createScaledBitmap(bitmap,w,h,<span class="keyword">true</span>);<span class="comment">//这种方式会带来很多意想不到的bug，建议使用画布canvas来缩放</span></div><div class="line">或者</div><div class="line">BitmapFactory.Options opts = <span class="keyword">new</span> BitmapFactory.Options();</div><div class="line"><span class="comment">// 设置为ture只获取图片大小</span></div><div class="line">opts.inJustDecodeBounds = <span class="keyword">true</span>;</div><div class="line">opts.inPreferredConfig = Bitmap.Config.ALPHA_8;</div><div class="line"><span class="comment">// 返回为空</span></div><div class="line">BitmapFactory.decodeFile(path, opts);</div><div class="line">opts.inSampleSize = getScaleSize(opts,w,h);</div><div class="line"><span class="comment">// 加载到内存</span></div><div class="line">opts.inJustDecodeBounds = <span class="keyword">false</span>;</div><div class="line">Bitmap bm= BitmapFactory.decodeFile(path, opts);</div></pre></td></tr></table></figure></p>
<p>另外的解决方式就是缓存(只说明一下解决思路)</p>
<p>本地缓存<br>在跳转Intent之前，将Bitmap缓存到到本地文件中，然后再取出来。</p>
<p>内存缓存<br>使用单例模式的方式缓存（不建议）</p>
<h5 id="Bitmap-createScaledBitmap使用注意"><a href="#Bitmap-createScaledBitmap使用注意" class="headerlink" title="Bitmap.createScaledBitmap使用注意"></a>Bitmap.createScaledBitmap使用注意</h5><p>Bitmap.createScaledBitmap 该方法会创建一个新的Bitmap，而且不会按照比例拉伸<br>它直接会按照你输入的Width和Height输出,这样的输出会导致</p>
<p>总结一下如何解决Intent传输Bitmap crash或者无法传递的问题<br>1.Bitmap缩小使用Canvas来缩放<br>2.如果Bitmap本身很小就无需缩放，否则会导致很奇怪的crash</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Cell animation stop fraction must be greater than start fraction]]></title>
      <url>www.baidu.com/2016/08/26/hello-world/</url>
      <content type="html"><![CDATA[<h3 id="Cell-animation-stop-fraction-must-be-greater-than-start-fraction-问题"><a href="#Cell-animation-stop-fraction-must-be-greater-than-start-fraction-问题" class="headerlink" title="Cell animation stop fraction must be greater than start fraction 问题"></a>Cell animation stop fraction must be greater than start fraction 问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-(CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section &#123;</div><div class="line">   //return 0.001f;设置大于0的数导致的crash</div><div class="line">   return 0;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="可以解决crash的bug-这应该是苹果本身的一个bug，mark一下"><a href="#可以解决crash的bug-这应该是苹果本身的一个bug，mark一下" class="headerlink" title="可以解决crash的bug,这应该是苹果本身的一个bug，mark一下"></a>可以解决crash的bug,这应该是苹果本身的一个bug，mark一下</h4>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android源代码编译]]></title>
      <url>www.baidu.com/2016/08/24/android-s-0/</url>
      <content type="html"><![CDATA[<h1 id="Android源码下载及编译"><a href="#Android源码下载及编译" class="headerlink" title="Android源码下载及编译"></a>Android源码下载及编译</h1><p>使用科大镜像（国内无法直接访问google）</p>
<p>首先下载 repo 工具<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">mkdir ~/bin</div><div class="line">PATH=~/bin:<span class="variable">$PATH</span></div><div class="line">curl https://storage-googleapis.lug.ustc.edu.cn/git-repo-downloads/repo &gt; ~/bin/repo</div><div class="line">chmod a+x ~/bin/repo</div></pre></td></tr></table></figure></p>
<p>然后建立一个工作目录（名字任意）<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mkdir AndroidSource</div><div class="line"><span class="built_in">cd</span> AndroidSource</div></pre></td></tr></table></figure></p>
<p>初始化仓库：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">repo init -u git://mirrors.ustc.edu.cn/aosp/platform/manifest</div><div class="line"><span class="comment">## 如果提示无法连接到 gerrit.googlesource.com，可以编辑 ~/bin/repo，把 REPO_URL 一行替换成下面的：</span></div><div class="line"><span class="comment">## REPO_URL = 'https://gerrit-googlesource.lug.ustc.edu.cn/git-repo'</span></div></pre></td></tr></table></figure>
<p>下载特定的android源码版本<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">repo init -u git://mirrors.ustc.edu.cn/aosp/platform/manifest -b android-4.0.1_r1</div></pre></td></tr></table></figure></p>
<p>同步源码树<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">repo sync</div></pre></td></tr></table></figure></p>
<p>可能需要漫长的等待android源码的下载</p>
<p>源码下载完成后，开始编译android源码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">source</span> build/envset.sh</div><div class="line">lunch full-eng</div><div class="line">make</div></pre></td></tr></table></figure></p>
<p>简单的三步即可完成源码的编译</p>
]]></content>
    </entry>
    
  
  
</search>
